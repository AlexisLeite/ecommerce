{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Usuario/Documents/Coding/Next/ecommerce/src/store/products/server/refresh.ts"],"sourcesContent":["\"use server\";\r\n\r\nimport { getPrismaClient } from \"@/src/prisma/getClient\";\r\nimport { Product } from \"@prisma/client\";\r\nimport { revalidatePath } from \"next/cache\";\r\n\r\nexport type TPage<T> = {\r\n  data: T[];\r\n  pages: number;\r\n  currentPage: number;\r\n};\r\n\r\nexport async function refresh(\r\n  page: number = 0,\r\n  revalidate = true,\r\n): Promise<TPage<Product>> {\r\n  if (revalidate) {\r\n    revalidatePath(\"/\");\r\n  }\r\n\r\n  const totalProducts = await getPrismaClient().product.count();\r\n  const pages = Math.ceil(totalProducts / 10);\r\n  const currentPage = Math.max(1, Math.min(page, pages));\r\n\r\n  return {\r\n    pages,\r\n    currentPage,\r\n    data: await getPrismaClient().product.findMany({\r\n      take: 10,\r\n      skip: 10 * (currentPage - 1),\r\n      orderBy: { name: \"asc\" },\r\n    }),\r\n  };\r\n}\r\n"],"names":[],"mappings":";;;;;;IAYsB,UAAA,WAAA,GAAA,CAAA,GAAA,yNAAA,CAAA,wBAAA,EAAA,8CAAA,yNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,yNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Usuario/Documents/Coding/Next/ecommerce/src/store/products/server/removeProduct.ts"],"sourcesContent":["\"use server\";\r\n\r\nimport { getPrismaClient } from \"@/src/prisma/getClient\";\r\nimport { Product } from \"@prisma/client\";\r\nimport { revalidatePath } from \"next/cache\";\r\n\r\nexport async function removeProduct(product: Product) {\r\n  const result = await getPrismaClient().product.delete({\r\n    where: { id: product.id },\r\n  });\r\n\r\n  revalidatePath(\"/\");\r\n\r\n  return result;\r\n}\r\n"],"names":[],"mappings":";;;;;;IAMsB,gBAAA,WAAA,GAAA,CAAA,GAAA,yNAAA,CAAA,wBAAA,EAAA,8CAAA,yNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,yNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 39, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Usuario/Documents/Coding/Next/ecommerce/src/store/products/ProductsStore.ts"],"sourcesContent":["import { Product } from \"@prisma/client\";\r\nimport { makeAutoObservable, runInAction, toJS } from \"mobx\";\r\nimport { refresh, TPage } from \"./server/refresh\";\r\nimport { removeProduct } from \"./server/removeProduct\";\r\n\r\nexport class ProductsStore {\r\n  private loading = 0;\r\n  private page: TPage<Product> = {\r\n    currentPage: 1,\r\n    data: [],\r\n    pages: 1,\r\n  };\r\n\r\n  constructor(data: TPage<Product>) {\r\n    this.page = data;\r\n    makeAutoObservable(this);\r\n  }\r\n\r\n  public get currentPage() {\r\n    return this.page.currentPage;\r\n  }\r\n\r\n  public get isLoading() {\r\n    return this.loading > 0;\r\n  }\r\n\r\n  public get hasMore() {\r\n    return this.page.currentPage < this.page.pages;\r\n  }\r\n\r\n  public get hasPrevious() {\r\n    return this.page.currentPage > 1;\r\n  }\r\n\r\n  public get products() {\r\n    return this.page.data;\r\n  }\r\n\r\n  public async next() {\r\n    this.loading++;\r\n  }\r\n\r\n  public async previous() {\r\n    this.loading--;\r\n  }\r\n\r\n  public async refresh() {\r\n    this.asyncFn(async () => {\r\n      const page = await refresh(this.page.currentPage);\r\n      runInAction(() => {\r\n        this.page = page;\r\n      });\r\n    });\r\n  }\r\n\r\n  public async remove(product: Product) {\r\n    this.asyncFn(async () => {\r\n      await removeProduct(toJS(product));\r\n      this.refresh();\r\n    });\r\n  }\r\n\r\n  private async asyncFn<T>(fn: () => Promise<T>): Promise<T> {\r\n    this.loading++;\r\n    try {\r\n      return await fn();\r\n    } finally {\r\n      runInAction(() => {\r\n        this.loading--;\r\n      });\r\n    }\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;AACA;AACA;AACA;;;;AAEO,MAAM;IACH,UAAU,EAAE;IACZ,OAAuB;QAC7B,aAAa;QACb,MAAM,EAAE;QACR,OAAO;IACT,EAAE;IAEF,YAAY,IAAoB,CAAE;QAChC,IAAI,CAAC,IAAI,GAAG;QACZ,CAAA,GAAA,8IAAA,CAAA,qBAAkB,AAAD,EAAE,IAAI;IACzB;IAEA,IAAW,cAAc;QACvB,OAAO,IAAI,CAAC,IAAI,CAAC,WAAW;IAC9B;IAEA,IAAW,YAAY;QACrB,OAAO,IAAI,CAAC,OAAO,GAAG;IACxB;IAEA,IAAW,UAAU;QACnB,OAAO,IAAI,CAAC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK;IAChD;IAEA,IAAW,cAAc;QACvB,OAAO,IAAI,CAAC,IAAI,CAAC,WAAW,GAAG;IACjC;IAEA,IAAW,WAAW;QACpB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI;IACvB;IAEA,MAAa,OAAO;QAClB,IAAI,CAAC,OAAO;IACd;IAEA,MAAa,WAAW;QACtB,IAAI,CAAC,OAAO;IACd;IAEA,MAAa,UAAU;QACrB,IAAI,CAAC,OAAO,CAAC;YACX,MAAM,OAAO,MAAM,CAAA,GAAA,6KAAA,CAAA,UAAO,AAAD,EAAE,IAAI,CAAC,IAAI,CAAC,WAAW;YAChD,CAAA,GAAA,8IAAA,CAAA,cAAW,AAAD,EAAE;gBACV,IAAI,CAAC,IAAI,GAAG;YACd;QACF;IACF;IAEA,MAAa,OAAO,OAAgB,EAAE;QACpC,IAAI,CAAC,OAAO,CAAC;YACX,MAAM,CAAA,GAAA,6KAAA,CAAA,gBAAa,AAAD,EAAE,CAAA,GAAA,8IAAA,CAAA,OAAI,AAAD,EAAE;YACzB,IAAI,CAAC,OAAO;QACd;IACF;IAEA,MAAc,QAAW,EAAoB,EAAc;QACzD,IAAI,CAAC,OAAO;QACZ,IAAI;YACF,OAAO,MAAM;QACf,SAAU;YACR,CAAA,GAAA,8IAAA,CAAA,cAAW,AAAD,EAAE;gBACV,IAAI,CAAC,OAAO;YACd;QACF;IACF;AACF","debugId":null}},
    {"offset": {"line": 114, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Usuario/Documents/Coding/Next/ecommerce/src/store/products/index.ts"],"sourcesContent":["import { enableStaticRendering } from \"mobx-react-lite\";\r\nimport { ProductsStore } from \"./ProductsStore\";\r\nimport { Product } from \"@prisma/client\";\r\nimport { TPage } from \"./server/refresh\";\r\n\r\nenableStaticRendering(typeof window === \"undefined\");\r\n\r\nexport function getProductsStore(data: TPage<Product>) {\r\n  return new ProductsStore(data);\r\n}\r\n"],"names":[],"mappings":";;;AAAA;AAAA;AACA;;;AAIA,CAAA,GAAA,iKAAA,CAAA,wBAAqB,AAAD,EAAE,aAAkB;AAEjC,SAAS,iBAAiB,IAAoB;IACnD,OAAO,IAAI,4IAAA,CAAA,gBAAa,CAAC;AAC3B","debugId":null}},
    {"offset": {"line": 135, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Usuario/Documents/Coding/Next/ecommerce/src/store/products/StoreProvider.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { createContext, ReactNode, useContext } from \"react\";\r\nimport { ProductsStore } from \"./ProductsStore\";\r\nimport { Product } from \"@prisma/client\";\r\nimport { TPage } from \"./server/refresh\";\r\nimport { getProductsStore } from \".\";\r\n\r\nconst StoreContext = createContext<ProductsStore>({} as any);\r\n\r\nexport function useProducts() {\r\n  return useContext(StoreContext)!;\r\n}\r\n\r\nexport const StoreProvider = ({\r\n  children,\r\n  data,\r\n}: {\r\n  children: ReactNode;\r\n  data: TPage<Product>;\r\n}) => (\r\n  <StoreContext.Provider value={getProductsStore(data)}>\r\n    {children}\r\n  </StoreContext.Provider>\r\n);\r\n"],"names":[],"mappings":";;;;;AAEA;AAIA;;;AANA;;;AAQA,MAAM,6BAAe,CAAA,GAAA,6JAAA,CAAA,gBAAa,AAAD,EAAiB,CAAC;AAE5C,SAAS;;IACd,OAAO,CAAA,GAAA,6JAAA,CAAA,aAAU,AAAD,EAAE;AACpB;GAFgB;AAIT,MAAM,gBAAgB,CAAC,EAC5B,QAAQ,EACR,IAAI,EAIL,iBACC,6LAAC,aAAa,QAAQ;QAAC,OAAO,CAAA,GAAA,oIAAA,CAAA,mBAAgB,AAAD,EAAE;kBAC5C;;;;;;KARQ","debugId":null}}]
}